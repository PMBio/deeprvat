name: DeepRVAT
run-name: DeepRVAT üß¨üß™üíªüßë‚Äçüî¨
on: [ push ]

jobs:
  DeepRVAT-Preprocessing-Pipeline-Smoke-Tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Preprocessing Smoke Test
        uses: snakemake/snakemake-github-action@v1.24.0
        with:
          directory: 'example/preprocess'
          snakefile: 'pipelines/preprocess.snakefile'
          args: '-j 2 -n --configfile pipelines/config/deeprvat_preprocess_config.yaml'
          stagein: 'touch example/preprocess/workdir/reference/GRCh38.primary_assembly.genome.fa'

  DeepRVAT-Preprocessing-Pipeline-Tests:
    runs-on: ubuntu-latest
    needs: DeepRVAT-Preprocessing-Pipeline-Smoke-Tests
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: mamba-org/setup-micromamba@v1.4.3
        with:
          environment-name: deeprvat-preprocess-gh-action
          environment-file: ${{ github.workspace }}/deeprvat_preprocessing_env.yml
          cache-environment: true
          cache-downloads: true
      - name: Install DeepRVAT
        run: pip install -e ${{ github.workspace }}
        shell: micromamba-shell {0}

      - name: Create directory for reference files
        run: mkdir -p example/preprocess/workdir/reference

      - name: Restore Cache
        id: restore-fasta-cache
        uses: actions/cache@v3
        with:
          path: example/preprocess/workdir/reference
          key: reference-genome-${{ runner.os }}-v1

      - name: Check if Cache Hit
        run: |
          echo "Cache hit: ${{ steps.restore-fasta-cache.outputs.cache-hit }}"

      - name: Download Genome File
        if: steps.restore-fasta-cache.outputs.cache-hit != 'true'
        run: |
          wget https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_44/gencode.v44.primary_assembly.annotation.gtf.gz \
          -O example/preprocess/workdir/reference/GRCh38.primary_assembly.genome.fa.gz

      - name: Cache Genome File
        if: steps.restore-fasta-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        with:
          path: example/preprocess/workdir/reference
          key: reference-genome-${{ runner.os }}-v1

#      - name: Download fasta file for preprocessing pipeline
#        run: |
#          cd ${{ github.workspace }}/example/preprocess \
#          && wget https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_44/GRCh38.primary_assembly.genome.fa.gz -P workdir/reference
      - name: Unpack fasta file
        run: cd ${{ github.workspace }}/example/preprocess && gzip -d workdir/reference/GRCh38.primary_assembly.genome.fa.gz
      - name: Run preprocessing pipeline
        run: |
          python -m snakemake -j 2 --directory ${{ github.workspace }}/example/preprocess \
          --snakefile ${{ github.workspace }}/pipelines/preprocess.snakefile \
          --configfile ${{ github.workspace }}/pipelines/config/deeprvat_preprocess_config.yaml --show-failed-logs
        shell: micromamba-shell {0}
